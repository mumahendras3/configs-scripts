#!/bin/bash

# Exit on errors
set -e

# Look for installed kernel's version number
VERSION=$(readlink /boot/vmlinuz | cut -f3 -d\-)

# Set CLEAN=yes to clean the previous initrd tree first
CLEAN=${CLEAN:-no}
if [ "$CLEAN" = "no" ]; then
	unset CLEAN
else
	CLEAN="-c"
fi

# Generate the new initrd
if [ -r /etc/mkinitrd.conf ]; then
 	# Use the already available /etc/mkinitrd.conf
	echo "Generating new initrd using /etc/mkinitrd.conf...
Make sure KERNEL_VERSION points to the right kernel!"
	mkinitrd -F $CLEAN
else
	echo "Using mkinitrd_command_generator.sh to generate a suitable initrd..."
	if [ -e /boot/intel-ucode.cpio ]; then
		# Prepend microcode
		echo "Microcode found, prepending it to initrd"
		$(/usr/share/mkinitrd/mkinitrd_command_generator.sh -r -k "$VERSION" -a "-P /boot/intel-ucode.cpio" | sed "s/-c/${CLEAN}/g")
	else
		$(/usr/share/mkinitrd/mkinitrd_command_generator.sh -r -k "$VERSION" | sed "s/-c/${CLEAN}/g")
	fi
fi

# Backup previous kernels
find /boot/efi/EFI/Slackware -name 'vmlinuz*' ! -name '*-previous' -exec mv '{}' '{}'-previous \;

# Copy the new kernels and initrd to /boot/efi/EFI/Slackware
cp /boot/{intel-ucode.cpio,initrd.gz,vmlinuz-*-"${VERSION}"} /boot/efi/EFI/Slackware

# Rename the newly copied kernels to not include the version number
[ -x /boot/efi/EFI/Slackware/vmlinuz-generic-"${VERSION}" ] && \
	mv /boot/efi/EFI/Slackware/{vmlinuz-generic-"${VERSION}",vmlinuz-generic}
[ -x /boot/efi/EFI/Slackware/vmlinuz-huge-"${VERSION}" ] && \
	mv /boot/efi/EFI/Slackware/{vmlinuz-huge-"${VERSION}",vmlinuz-huge}

# Done!
echo "Done!"
