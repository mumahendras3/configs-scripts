#!/bin/sh -e
#
# Start s6-based user services upon first login
#

# Setting $PATH first since it's probably undefined
export PATH="/usr/bin:/bin:/usr/sbin:/sbin"

# Defining some important constants that will be used later
SYSTEM_SCANDIR="$(xargs -0a /proc/1/cmdline | grep -o ' /.*$' | cut -c 2-)"
USERTREE_SVDIR="${SYSTEM_SCANDIR}/usertree-srv"
S6RC_TIMEOUT="5000"

# Aborting execution when not invoked by pam_exec
if [ -z "$PAM_SERVICE" ]; then
    echo "We are not invoked by pam_exec, aborting..."
    exit 1
fi

# Exiting immediately if PID 1 is not s6-svscan
grep -Fqwz s6-svscan /proc/1/cmdline || exit 0

# Exiting immediately if the usertree instance supervisor is not running
s6-svok "$USERTREE_SVDIR" || exit 0
s6-svstat -o ready "$USERTREE_SVDIR" | grep -q '^true$' || exit 0

# Exiting immediately if this is not the user's first session
[ $(loginctl -pSessions --value show-user "$PAM_USER" | wc -w) -gt 1 ] && exit 0

# Starting the user's supervision tree
s6-instance-list "$USERTREE_SVDIR" | grep -q "^${PAM_USER}$" || \
    s6-instance-create "$USERTREE_SVDIR" "$PAM_USER"
s6-instance-control -wU -T "$S6RC_TIMEOUT" -U "$USERTREE_SVDIR" "$PAM_USER"/log
s6-instance-control -wU -T "$S6RC_TIMEOUT" -U "$USERTREE_SVDIR" "$PAM_USER"
